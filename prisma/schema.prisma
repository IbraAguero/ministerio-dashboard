// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  activo
  inactivo
}

enum Role {
  usuario
  admin
}

enum TipoDispositivo {
  impresora
  monitor
  periferico
  red
}

model User {
  id            String    @id @default(cuid())
  name          String
  lastName      String
  email         String    @unique
  password      String
  image         String?
  role          Role      @default(usuario)
  status        Status    @default(activo)

  dispositivos Dispositivo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Dispositivo {
  id             String         @id @default(uuid())
  tipo           TipoDispositivo
  nro_inventario String         @unique
  nro_serie      String

  subtipoId      String?
  lugarId        String
  estadoId       String
  proveedorId    String?
  modeloId       String
  usuarioId      String

  pulgadas       Int?           // Esto puede ser opcional dependiendo del tipo de dispositivo
  remito         String?
  comentario     String?

  // Relaciones
  subtipo        SubtipoDispositivo? @relation(fields: [subtipoId], references: [id])
  lugar          Lugar          @relation(fields: [lugarId], references: [id])
  estado         Estado         @relation(fields: [estadoId], references: [id])
  proveedor      Proveedor?     @relation(fields: [proveedorId], references: [id])
  modelo         Modelo         @relation(fields: [modeloId], references: [id])
  usuario        User           @relation(fields: [usuarioId], references: [id])

  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model SubtipoDispositivo {
  id       String          @id @default(uuid())
  nombre   String
  tipo     TipoDispositivo

  dispositivos Dispositivo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([nombre, tipo])
}

model Lugar {
  id             String @id @default(uuid())
  nombre         String
  encargado      String?

  dispositivos   Dispositivo[]
}
model Estado {
  id             String @id @default(uuid())
  nombre         String
  descripcion    String?

  dispositivos   Dispositivo[]
}
model Proveedor {
  id String @id @default(uuid())
  nombre String
  telefono Int?
  descripcion String?

  dispositivos Dispositivo[]
}

model Fabricante {
  id String @id @default(uuid())
  nombre String
  tipo TipoDispositivo

  modelos Modelo[]

  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  @@unique([nombre,tipo])
}

model Modelo {
  id            String       @id @default(uuid())
  nombre        String

  fabricanteId  String
  fabricante    Fabricante   @relation(fields: [fabricanteId], references: [id])

  // Relaci√≥n inversa
  dispositivos  Dispositivo[]

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}